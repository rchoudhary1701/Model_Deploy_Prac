# cloudbuild.yaml

steps:
# Step 0: Install dependencies and run tests
- id: 'Run Tests'
  name: 'python:3.9'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    pip install -r requirements.txt
    pytest tests/

# Step 1: Build the Docker image, tagging it with the unique Git commit hash
- id: 'Build Image'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t',
    '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}',
    '.'
    ]

# Step 2: Push the versioned container image to Artifact Registry
- id: 'Push Image'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}'
    ]

# Step 3: Dynamically update the pipeline definition to use the new image URI
- id: 'Update Pipeline Spec'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    sed -i "s|DOCKER_IMAGE_URI = .*|DOCKER_IMAGE_URI = \"${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}\"|" src/pipeline.py

# Step 4: Trigger the Vertex AI Pipeline
- id: 'Trigger Pipeline'
  name: 'python:3.9'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    pip install -r requirements.txt
    python3 src/pipeline.py --run # <-- CORRECTED: Removed extra arguments

# Store the final image URI for reference
images:
- '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}'


# Define variables that Cloud Build will use
substitutions:
  _REGION: 'europe-west1'
  _REPO_NAME: 'forecasting-repo'
  _IMAGE_NAME: 'demand-forecaster'

# This option ensures logs are correctly streamed
options:
  logging: CLOUD_LOGGING_ONLY

